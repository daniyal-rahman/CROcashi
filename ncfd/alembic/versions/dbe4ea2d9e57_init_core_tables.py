"""init core tables

Revision ID: dbe4ea2d9e57
Revises: 
Create Date: 2025-08-16 02:43:43.926072

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dbe4ea2d9e57'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('company_id')
    )
    op.create_table('ctgov_ingest_state',
    sa.Column('id', sa.Boolean(), nullable=False),
    sa.Column('cursor_last_update_posted', sa.Date(), nullable=True),
    sa.Column('last_run_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ingest_runs',
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('since_date', sa.Date(), nullable=True),
    sa.Column('until_date', sa.Date(), nullable=True),
    sa.Column('total_returned', sa.Integer(), nullable=True),
    sa.Column('total_processed', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('run_id')
    )
    op.create_table('trials',
    sa.Column('trial_id', sa.Integer(), nullable=False),
    sa.Column('nct_id', sa.String(), nullable=False),
    sa.Column('sponsor_text', sa.String(), nullable=True),
    sa.Column('sponsor_company_id', sa.Integer(), nullable=True),
    sa.Column('phase', sa.String(), nullable=True),
    sa.Column('indication', sa.String(), nullable=True),
    sa.Column('is_pivotal', sa.Boolean(), nullable=False),
    sa.Column('primary_endpoint_text', sa.String(), nullable=True),
    sa.Column('est_primary_completion_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('first_posted_date', sa.Date(), nullable=True),
    sa.Column('last_update_posted_date', sa.Date(), nullable=True),
    sa.Column('intervention_types', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('last_seen_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('current_sha256', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['sponsor_company_id'], ['companies.company_id'], ),
    sa.PrimaryKeyConstraint('trial_id'),
    sa.UniqueConstraint('nct_id')
    )
    op.create_index('idx_trials_is_pivotal', 'trials', ['is_pivotal'], unique=False)
    op.create_index('idx_trials_last_update', 'trials', ['last_update_posted_date'], unique=False)
    op.create_index('idx_trials_status', 'trials', ['status'], unique=False)
    op.create_table('ctgov_history_versions',
    sa.Column('trial_id', sa.Integer(), nullable=False),
    sa.Column('version_rank', sa.Integer(), nullable=False),
    sa.Column('submitted_date', sa.Date(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['trial_id'], ['trials.trial_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('trial_id', 'version_rank')
    )
    op.create_table('trial_versions',
    sa.Column('trial_version_id', sa.Integer(), nullable=False),
    sa.Column('trial_id', sa.Integer(), nullable=False),
    sa.Column('captured_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_update_posted_date', sa.Date(), nullable=True),
    sa.Column('raw_jsonb', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('sha256', sa.String(length=64), nullable=False),
    sa.Column('primary_endpoint_text', sa.String(), nullable=True),
    sa.Column('sample_size', sa.Integer(), nullable=True),
    sa.Column('analysis_plan_text', sa.String(), nullable=True),
    sa.Column('changes_jsonb', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('changed_primary_endpoint', sa.Boolean(), nullable=True),
    sa.Column('changed_sample_size', sa.Boolean(), nullable=True),
    sa.Column('sample_size_delta', sa.Integer(), nullable=True),
    sa.Column('changed_analysis_plan', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['trial_id'], ['trials.trial_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('trial_version_id'),
    sa.UniqueConstraint('trial_id', 'sha256', name='uq_trial_version_hash')
    )
    op.create_index('idx_trial_versions_changed', 'trial_versions', ['changed_primary_endpoint', 'changed_sample_size', 'changed_analysis_plan'], unique=False)
    op.create_index('idx_trial_versions_trial_time', 'trial_versions', ['trial_id', 'captured_at'], unique=False)
    op.create_index('idx_trial_versions_updated', 'trial_versions', ['last_update_posted_date'], unique=False)
    op.create_index(op.f('ix_trial_versions_captured_at'), 'trial_versions', ['captured_at'], unique=False)
    op.create_index(op.f('ix_trial_versions_trial_id'), 'trial_versions', ['trial_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_trial_versions_trial_id'), table_name='trial_versions')
    op.drop_index(op.f('ix_trial_versions_captured_at'), table_name='trial_versions')
    op.drop_index('idx_trial_versions_updated', table_name='trial_versions')
    op.drop_index('idx_trial_versions_trial_time', table_name='trial_versions')
    op.drop_index('idx_trial_versions_changed', table_name='trial_versions')
    op.drop_table('trial_versions')
    op.drop_table('ctgov_history_versions')
    op.drop_index('idx_trials_status', table_name='trials')
    op.drop_index('idx_trials_last_update', table_name='trials')
    op.drop_index('idx_trials_is_pivotal', table_name='trials')
    op.drop_table('trials')
    op.drop_table('ingest_runs')
    op.drop_table('ctgov_ingest_state')
    op.drop_table('companies')
    # ### end Alembic commands ###
